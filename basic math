to test (basic math - add numbers):
  create a test result about "the noodle" and "3 plus 7" and expecting "10".
  put 7 in a number.
  add 3 to the number.
  stash the test result given the number.

to test (basic math - copy number):
  create a test result about "the noodle" and "copy number"
    and expecting "5".
  put 5 in a number.
  put the number in another number.
  stash the test result given the other number.

to test (basic math - divide 0 by 3 with remainder):
  create a test result about "the noodle" and "0 over 3" and expecting "0".
  put 0 in a number.
  divide the number by 3 giving a quotient and a remainder.
  put the quotient in a string called actual.
  if the remainder is not 0,
    append " remainder " then the remainder to the actual.
  stash the test result given the actual.

to test (basic math - divide 0 by 3):
  create a test result about "the noodle" and "0 over 3" and expecting "0".
  put 0 in a number.
  divide the number by 3.
  stash the test result given the number.

to test (basic math - divide 1 by 3 with remainder):
  create a test result about "the noodle" and "1 over 3"
    and expecting "0 remainder 1".
  put 1 in a number.
  divide the number by 3 giving a quotient and a remainder.
  put the quotient in a string called actual.
  if the remainder is not 0,
    append " remainder " then the remainder to the actual.
  stash the test result given the actual.

to test (basic math - divide 1 by 3):
  create a test result about "the noodle" and "1 over 3"
    and expecting "0".
  put 1 in a number.
  divide the number by 3.
  stash the test result given the number.

to test (basic math - divide 24 by 3 with remainder):
  create a test result about "the noodle" and "24 over 3" and expecting "8".
  put 24 in a number.
  divide the number by 3 giving a quotient and a remainder.
  put the quotient in a string called actual.
  if the remainder is not 0,
    append " remainder " then the remainder to the actual.
  stash the test result given the actual.

to test (basic math - divide 24 by 3):
  create a test result about "the noodle" and "24 over 3" and expecting "8".
  put 24 in a number.
  divide the number by 3.
  stash the test result given the number.

to test (basic math - divide 25 by 3 with remainder):
  create a test result about "the noodle" and "25 over 3" and expecting "8 remainder 1".
  put 25 in a number.
  divide the number by 3 giving a quotient and a remainder.
  put the quotient in a string called actual.
  if the remainder is not 0,
    append " remainder " then the remainder to the actual.
  stash the test result given the actual.

to test (basic math - divide 25 by 3):
  create a test result about "the noodle" and "25 over 3" and expecting "8".
  put 25 in a number.
  divide the number by 3.
  stash the test result given the number.

to test (basic math - leftshift number):
  create a test result about "the noodle" and "1543 leftshifted 3 bits"
    and expecting "12344".
  put 1543 in a number.
  shift the number left 3 bits.
  stash the test result given the number.

to test (basic math - multiply numbers):
  create a test result about "the noodle" and "3 times 7" and expecting "21".
  put 7 in a number.
  multiply the number by 3.
  stash the test result given the number.

to test (basic math - negate negative number):
  create a test result about "the noodle" and "negate -5"
    and expecting "5".
  put -5 in a number.
  negate the number.
  stash the test result given the number.

to test (basic math - negate number):
  create a test result about "the noodle" and "negate 5"
    and expecting "-5".
  put 5 in a number.
  negate the number.
  stash the test result given the number.

to test (basic math - rightshift number):
  create a test result about "the noodle" and "12345 rightshifted 3 bits"
    and expecting "1543".
  put 12345 in a number.
  shift the number right 3 bits.
  stash the test result given the number.

to test (basic math - round 31 up to 32):
  create a test result about "the noodle" and "round 31 up to power of two"
    and expecting "32".
  put 31 in a number.
  round the number up to the nearest power of two.
  stash the test result given the number.

to test (basic math - round 32 up to 32):
  create a test result about "the noodle" and "round 32 up to power of two"
    and expecting "32".
  put 32 in a number.
  round the number up to the nearest power of two.
  stash the test result given the number.

to test (basic math - subtract numbers):
  create a test result about "the noodle" and "10 minus 3" and expecting "7".
  put 10 in a number.
  subtract 3 from the number.
  stash the test result given the number.

to test (basic math - unterminated string length):
  create a test result about "the noodle" and "unterminated string length"
    and expecting "5".
  put "12345" in a string.
  stash the test result given the string's length.

to test (basic math):
  test (basic math - add numbers).
  test (basic math - subtract numbers).
  test (basic math - rightshift number).
  test (basic math - leftshift number).
  test (basic math - round 31 up to 32).
  test (basic math - round 32 up to 32).
  test (basic math - unterminated string length).
  test (basic math - copy number).
  test (basic math - negate number).
  test (basic math - negate negative number).
  test (basic math - multiply numbers).
  test (basic math - divide 0 by 3).
  test (basic math - divide 1 by 3).
  test (basic math - divide 24 by 3).
  test (basic math - divide 25 by 3).
  test (basic math - divide 0 by 3 with remainder).
  test (basic math - divide 1 by 3 with remainder).
  test (basic math - divide 24 by 3 with remainder).
  test (basic math - divide 25 by 3 with remainder).

