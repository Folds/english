@if not "%OS%"=="Windows_NT" goto DOSEXIT

@setlocal

@rem    Copyright 2017 by Jasper Paulsen.
@rem    This batch script contains snippets of code from
@rem    Tim Hill's book on Windows NT Shell Scripting,
@rem    which is copyright 1998 by New Riders Publishing.

@set TAB=	
@echo %TIME% >&2
@call :REPORT_HEADINGS
@call :CLEAR_TOTALS
@call :MEASURE_FILES "inputs\_master\desktop\*.*"
@call :MEASURE_FILES "inputs\_master\noodle\*.*"
@call :MEASURE_FILES "inputs\_master\turtle\*.*"
@call :REPORT_TOTALS
@call :REPORT_HEADINGS
@echo %TIME% >&2

:DONE
@endlocal & set RET=%RET%
@goto :EOF

@rem === Helper routines that don't use setlocal ===

:MEASURE_FILES
@for %%I in (%1) do @(
    @call :MEASURE_FILE "%%I"
)

:MEASURE_FILE
@set EXT=%~x1
@if {%EXT%} neq {} @goto :EOF
@call :GET_FIRST_LINE %1
@set FIRST_LINE=%RET:"=%
@if /I "%FIRST_LINE:~0,8%"=="ream cal" @goto :EOF
@call :COUNT_PERIOD_LINES %1
@set PERIOD_LINES=%RET%
@if {%PERIOD_LINES%}=={0} @got :EOF
@call :GET_FILESIZE %1
@set FILESIZE=%RET%
@call :GET_FILENAME_BASE %1
@set BASENAME=%RET%
@call :COUNT_CODE_LINES %1
@set CODE_LINES=%RET%
@call :COUNT_LINES %1
@set LINES=%RET%
@call :COUNT_NONBLANK_LINES %1
@set NONBLANK_LINES=%RET%
@call :COUNT_WRAPS %1
@set WRAPS=%RET%
@set /a COMMENT_LINES=%NONBLANK_LINES%-%CODE_LINES%
@set /a BLANK_LINES=%LINES%-%NONBLANK_LINES%
@echo %FILESIZE%%TAB%%LINES%%TAB%%CODE_LINES%%TAB%%COMMENT_LINES%%TAB%%BLANK_LINES%%TAB%%WRAPS%%TAB%%BASENAME%
@set /a TOTAL_FILESIZE+=%FILESIZE%
@set /a TOTAL_LINES+=%LINES%
@set /a TOTAL_CODE_LINES+=%CODE_LINES%
@set /a TOTAL_COMMENT_LINES+=%COMMENT_LINES%
@set /a TOTAL_BLANK_LINES+=%BLANK_LINES%
@set /a TOTAL_WRAPS+=%WRAPS%
@goto :EOF

:CLEAR_TOTALS
@set TOTAL_FILESIZE=0
@set TOTAL_LINES=0
@set TOTAL_CODE_LINES=0
@set TOTAL_COMMENT_LINES=0
@set TOTAL_BLANK_LINES=0
@set TOTAL_WRAPS=0
@goto :EOF

:REPORT_HEADINGS
@echo Bytes%TAB%Lines%TAB%Code%TAB%Comment%TAB%Blank%TAB%Wraps%TAB%Filename
@goto :EOF

:REPORT_TOTALS
@echo =======%TAB%=====%TAB%=====%TAB%====%TAB%====%TAB%====%TAB%=====
@echo %TOTAL_FILESIZE%%TAB%%TOTAL_LINES%%TAB%%TOTAL_CODE_LINES%%TAB%%TOTAL_COMMENT_LINES%%TAB%%TOTAL_BLANK_LINES%%TAB%%TOTAL_WRAPS%%TAB%Total
@goto :EOF

@rem === Helper routines that use setlocal ===

@rem Get count of non-blank, non-comment lines.  White space is treated as blank.
:COUNT_CODE_LINES
@setlocal
@set /A RET=0
@for /F useback^ eol^=\ %%I in (%1) do @set /A RET+=1
@endlocal & set RET=%RET%
@goto :EOF

@rem Count lines in a file
:COUNT_LINES
@setlocal
@for /f %%I in ('find /v /c "" ^< %1') do @set RET=%%I
@endlocal & set RET=%RET%
@goto :EOF

@rem Get count of non-blank lines.  White space is treated as blank.
:COUNT_NONBLANK_LINES
@setlocal
@set /A RET=0
@for /F useback^ eol^= %%L in (%1) do @set /A RET+=1
@endlocal & set RET=%RET%
@goto :EOF

@rem Count lines that include one or more periods in a file
:COUNT_PERIOD_LINES
@setlocal
@for /f %%I in ('find /c "." ^< %1') do @set RET=%%I
@endlocal & set RET=%RET%
@goto :EOF

@rem Add up number of wraps needed to make code less than 81 characters wide.
:COUNT_WRAPS
@setlocal EnableDelayedExpansion
@set /a WRAPS_IN_FILE=0
@for /F "usebackq delims=<>" %%I in (%1) do @(
    @set "STR={%%I:"=}"
    @call :COUNT_WRAPS_IN_LINE "!STR:"=!"
    @set WRAPS=!RET!
    @set /a WRAPS_IN_FILE += !WRAPS!
)
@endlocal & set RET=%WRAPS_IN_FILE%
@goto :EOF

:COUNT_WRAPS_IN_LINE
@setlocal EnableDelayedExpansion
@set STR="%1:"=%"
@set WRAPS=0
@if "!STR:~89,1!" equ "" @goto :DONE_COUNT_WRAPS_IN_LINE
@set WRAPS=1
@if "!STR:~169,1!" equ "" @goto :DONE_COUNT_WRAPS_IN_LINE
@set WRAPS=102
@if "!STR:~8169,1!" neq "" @goto :MAX_COUNT_WRAPS_IN_LINE
@set WRAPS=0
@set LEN=0
@for %%N in (4096 2048 1024 512 256 128 64 32 16 8 4 2 1) do @(
    if "!STR:~%%N,1!" neq "" (
      set /a "LEN+=%%N"
      set "STR=!STR:~%%N!"
    )
)
@set /a LEN-=9
@set /a WRAPS = !LEN! / 80
@set /a LEN+=1
@goto :DONE_COUNT_WRAPS_IN_LINE
:MAX_WRAPS_IN_LINE
:DONE_COUNT_WRAPS_IN_LINE
@endlocal & set RET=%WRAPS%
@goto :EOF

@rem Gets filename (with neither path nor extension) of first argument.
:GET_FILENAME_BASE
@setlocal
@set RET=%~n1
@endlocal & set RET=%RET%
@goto :EOF

@rem Gets file size (in bytes) of first argument.
:GET_FILESIZE
@setlocal
@set RET=%~z1
@endlocal & set RET=%RET%
@goto :EOF

@rem Get first non-blank line of a file
:GET_FIRST_LINE
@setlocal EnableDelayedExpansion
@for /f "usebackq delims= eol=" %%I in (%1) do @(
    @set FIRST_LINE=%%I
    @goto :DONE_GET_FIRST_LINE
)
:DONE_GET_FIRST_LINE
@endlocal & set RET=%FIRST_LINE%
@goto :EOF

@rem Get first token of a string.  Ignores leading whitespace.
:GET_FIRST_TOKEN
@setlocal
@for /f "tokens=1" %%I in (%1) do @set RET=%%I
@endlocal & set RET=%RET%
@goto :EOF


@rem === This section needs to be at the end ===

:DOSEXIT
echo This script requires Windows NT (or a version of Windows based on NT, such as Windows 2000, 2003, XP, Vista, 7, 8, or 10).
