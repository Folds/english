\ The portions of this file that are from CAL-4700
\ are copyright 2017 by the Osmosian Order.
\ The remainder is copyright 2017 by Jasper Paulsen.

to clear a stack:
  destroy the stack.

to decide if a stack has just one thing on it:
  if the stack's count is 1, say yes.
  say no.

to decide if a token is numeric:
  privatize the token.
  remove any leading noise from the token.
  if the token is blank, say no.
  loop.
    get a byte from the token.
    if the byte is not any digit, say no.
    if the token is blank, say yes.
  repeat.

to finalize a stack:
  destroy the stack.

to get a number from a stack:
  put 0 into the number.
  get a stack entry from the stack.
  if the stack entry is nil, exit.
  convert the stack entry's string to the number.
  remove the stack entry from the stack.
  destroy the stack entry.

to get a string from a stack:
  clear the string.
  get a stack entry from the stack.
  if the stack entry is nil, put "error" into the string; exit.
  put the stack entry's string to the string.
  remove the stack entry from the stack.
  destroy the stack entry.

to get a token from a reply:
  remove any leading noise from the reply.
  clear the token.
  loop.
    if the reply is blank, exit.
    get a byte from the reply.
    if the byte is the space byte, exit.
    append the byte to the token.
  repeat.

to initialize a stack:
  \ nothing to do here,
  \ because a stack consists of some things.

to put a number on the stack:
  convert the number to a token.
  put the token on the stack.

to put a token on a stack:
  allocate memory for a stack entry.
  put the token into the stack entry's string.
  prepend the stack entry to the stack.

a stack entry is a thing with a string.

the stack is a stack.

a stack is some stack entries.

a token is a string.
